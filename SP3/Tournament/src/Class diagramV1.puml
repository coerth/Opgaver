@startuml
Controller *-- Tournament
Tournament *-- Team
Tournament *-- Bracket
Bracket *-- Match
Team *-- MatchHistory
Match *-- Team
Team *-- Player
MatchHistory *-- Match
Tournament *-- Group

Controller : - ArrayList<Tournament> tournaments
Controller : + void createTournament()
Controller : + void deleteTournament()
Controller : + void saveTournament()
Controller : + void postTournament()

Tournament : - Team winner
Tournament : - String name
Tournament : - ArrayList<Team> teams
Tournament : - String startDate
Tournament : - boolean isKnockOut
Tournament : - boolean isFixedDuration
Tournament : - Bracket bracket
Tournament : + Bracket createBracket()
Tournament : + void readTeamsFromFile()
Tournament : + void saveTeamsToFile()

Group : - String name
Group : - int amountOfMatches
Group : - ArrayList<Team> teams
Group : - Team[] ranking
Group : - Match matches

Bracket : - ArrayList<Array> playOffs
Bracket : - Match[] final
Bracket : - Match[] semiFinal
Bracket : - Match[] quarterFinal
Bracket : - Match[] preliminaryFinal
Bracket : + void playOffs()
Bracket : + void processFinal()
Bracket : + void processSemiFinal()
Bracket : + void processQuarterFinal()
Bracket : + void processPreliminaryFinal()

MatchHistory : - ArrayList<Match> matches
MatchHistory : + @Override String toString()

Match : - Team[] teams
Match : - Team winner
Match : - String startTime
Match : - int TeamAScore
Match : - int TeamBScore
Match : - int matchDuration
Match : + Team processMatch()
Match : + addGoalScore()
Match : + @Override String toString()

Team : - String name
Team : - ArrayList<Player> players
Team : - MatchHistory matchHistory
Team : - int goalScore
Team : + void addPlayer()
Team : + void removePlayer()
Team : + void joinTournament()
Team : + void forfeitTournament()
Team : + @Override String toString()

Player : - String name
Player : - int age
Player : - char gender
Player : + void createTeam()
@enduml